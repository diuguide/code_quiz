let questions = [
  {
      question: "Which of these is not an semantic HTML tag?",
      choiceA: "<main>",
      choiceB: "<section>",
      choiceC: "<footer>",
      choiceD: "<poster>",
      correct: "D"
  },{
      question: "Which best describes an API?",
      choiceA: "a set of functions and procedures allowing the creation of applications that access the features or data of an operating system, application, or other service.",
      choiceB: "a set of functions and procedures allowing the creation of the space time continuum, first theorized by Albest Einstein in 1812",
      choiceC: "the core constructional paradigm of the facebook dilema",
      choiceD: "an automatic programming interpretor used by the Department of Justice",
      correct: "A"
  },{
      question: "Which javascript command will pull an HTML element for use in a javascript file?",
      choiceA: "grabElement[]",
      choiceB: "pullElementbyId()",
      choiceC: ".getElementbyId()",
      choiceD: "[]getElementbyId",
      correct: "C"
  },{
      question: "indexOf() will...",
      choiceA: "return the entire index of elements in the array",
      choiceB: "return the first index at which a given element can be found in the array",
      choiceC: "return an index of the entire page",
      choiceD: "indexOf() is not a programming term",
      correct: "B"
  },{
      question: "What is The Matrix?",
      choiceA: "A lifestyle",
      choiceB: "A movie",
      choiceC: "Could be a lot of things",
      choiceD: "the future",
      correct: "C"
  }
];

const lastQuestion = questions.length -1;
let runningQuestion = 0;
let count = 0;
const questionTime = 10;
const gaugeWidth = 150;
const gaugeUnit = gaugeWidth / questionTime;
let TIMER;
let score = 0;

function renderQuestion() {
    let q = questions[runningQuestion];
    question.innerHTML = "<p>" + q.question + "</p>";
    choiceA.innerHTML = q.choiceA;
    choiceB.innerHTML = q.choiceB;
    choiceC.innerHTML = q.choiceC;
}

renderQuestion();



highScores.innerHTML =
    "<h1>HIGH SCORES</h1><hr><h2>" +
    localStorage.getItem("name") +
    "................" +
    localStorage.getItem("score") +
    "</h2>";
  resetBtn.style.display = "block";
  resetBtn.addEventListener("click", function myFunction() {
    location.replace("index.html");


hiScores.map(function (t) {
    let highscoreEl = document.createElement('p');
    highscoreEl.innerHTML = t.name + "-" + t.score;
    highscores.appendChild(highscoreEl);